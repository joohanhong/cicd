name: Git-Action CI and Trivy

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-trivy-checking:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to GitHub Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.CONTAINER_USERNAME }}
          password: ${{ secrets.CONTAINER_PASSWORD }}

      - name: BuildAndPushImage
        id: DockerBuild
        run: |
          docker build ./ -t ghcr.io/joohanhong/hongsnet-nginx:${{ github.sha }}
          docker push ghcr.io/joohanhong/hongsnet-nginx:${{ github.sha }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'ghcr.io/joohanhong/hongsnet-nginx:${{ github.sha }}'
          #format: 'table'
          #exit-code: '1'
          #format: 'sarif'
          output: 'trivy.txt'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      
      - name: Publish Trivy Output to Summary
        run: |
         if [[ -s trivy.txt ]]; then
           {
             echo "### Security Output"
             echo "<details><summary>Click to expand</summary>"
             echo ""
             echo '```terraform'
             cat trivy.txt
             echo '```'
             echo "</details>"
           } >> $GITHUB_STEP_SUMMARY
         fi


      #- name: Upload Trivy scan results to GitHub Security tab (2024-01-12, Changed)
      #  uses: github/codeql-action/upload-sarif@v3
      #  if: always()
      #  with:
      #    sarif_file: 'trivy-results.sarif'

      - name: Count vulnerabilities
        id: vulnerabilities
        run: |
          count=$(jq '.runs[].results[].ruleId' ./trivy-results.sarif | wc -c)
          echo "result_count=$count" >> $GITHUB_OUTPUT
          echo "$count"

      - name: Slack WebHook Send
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if:  ${{ steps.vulnerabilities.outputs.result_count != 0 }}
