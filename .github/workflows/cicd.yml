# Date: 2024-09-10
# Author: Joohanhong <joohan.hong@kt.com>

name: Git-Action CI and Trivy Checking

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: write
  contents: write
  id-token: write
  issues: write
  pull-requests: write
  security-events: write
  checks: write

env:
  #image-ref: 'aksaz99devazgov99registryiso.azurecr.io/alpine-nginx-ok:${{ github.sha }}'
  image-ref: 'aksaz99devazgov99registryiso.azurecr.io/centos7-nginx-vulner:${{ github.sha }}'
  #image-ref: 'aksaz99devazgov99registryiso.azurecr.io/centos6-vulner:${{ github.sha }}'

jobs:
  build-and-trivy-checking:
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: joohanhong/cicd
          path: ./cicd

      - name: Login to GitHub Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GIT_USERNAME }}
          password: ${{ secrets.GIT_PASSWORD }}

      - name: BuildAndPushImage
        id: DockerBuild
        run: |
            #No Problem Container Image
            #sudo docker login aksaz99devazgov99registryiso.azurecr.io -u ${{ secrets.ACR_ISOLATE_USERNAME }} -p ${{ secrets.ACR_ISOLATE_PASSWORD }}
            #sudo docker build ./ -t ${{ env.image-ref }}
            #sudo docker push ${{ env.image-ref }}
            
            #Problem Container Image CentOS 7 + Nginx
            sudo docker login aksaz99devazgov99registryiso.azurecr.io -u ${{ secrets.ACR_ISOLATE_USERNAME }} -p ${{ secrets.ACR_ISOLATE_PASSWORD }}
            sudo docker build ./ -t ${{ env.image-ref }}
            sudo docker push ${{ env.image-ref }}
           
            #Problem Container Image CentOS 6
            #sudo docker login aksaz99devazgov99registryiso.azurecr.io -u ${{ secrets.ACR_ISOLATE_USERNAME }} -p ${{ secrets.ACR_ISOLATE_PASSWORD }}
            #sudo docker build ./ -t ${{ env.image-ref }}
            #sudo docker push ${{ env.image-ref }} 

      - name: Run Trivy vulnerability scanner
        id: trivy-scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.image-ref }}
          #format: 'table'
          #exit-code: '1'
          format: 'sarif'
          output: 'trivy-results.sarif'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      
      - name: Upload Trivy scan results to GitHub Security tab (2024-01-12, Changed)
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_PASSWORD }}

      - name: Count vulnerabilities
        id: vulnerabilities
        run: |
          sudo yum install -y jq
          count=$(jq '.runs[].results[].ruleId' ./trivy-results.sarif | wc -c)
          echo "result_count=$count" >> $GITHUB_OUTPUT
          echo "Trivy Result_Count: $count"

      - name: Container Image Vulners Detected Sending Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: '${{ env.image-ref }} Container Image Vulners Detected!'
          fields: repo, messages, commit, author, action, eventName, ref, workflow, job, took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          #if: ${{ steps.vulnerabilities.outputs.result_count != 0 }}
        if: failure()

      - name: Container Image Vulners No Detected Sending Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: '${{ env.image-ref }} Container Image No Vulners Detected.'
          fields: repo, messages, commit, author, action, eventName, ref, workflow, job, took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: success()

#####
