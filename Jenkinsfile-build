pipeline {
	agent any
   
   	stages {
      		stage('Container Image Git Clone') {
			environment {
                                GIT_COMMIT = sh(script: 'git rev-parse HEAD | cut -c 1-8',returnStdout: true).trim()
                        }
            		steps {
                		//echo 'Clone'
                		sh "mkdir -p /var/lib/jenkins/workspace/hongsnet_nginx"
                		dir("/var/lib/jenkins/workspace/hongsnet_nginx") {
                     			git branch: 'master', credentialsId: 'juhanida21', url: 'https://gitlab.hongsnet.net/joohan.hong/hongsnet_nginx.git'
                		}
            		}
      		}
      
      		stage('Container Image Build and Push') {
            		environment {
                                GIT_COMMIT = sh(script: 'git rev-parse HEAD | cut -c 1-8',returnStdout: true).trim()
                        }	
			steps {
				sh "cd /var/lib/jenkins/workspace/hongsnet_nginx"
                		//sh 'echo ${TODAY}'
                		sh "sudo /usr/bin/docker login -u joohanhong -p ghdwngkstjqj nexus-repo.hongsnet.net:5443"
                		sh "cd /var/lib/jenkins/workspace/hongsnet_nginx; sudo /usr/bin/docker build --rm -t hongsnet-nginx ."
                		sh "sudo /usr/bin/docker tag hongsnet-nginx:latest nexus-repo.hongsnet.net:5443/hongsnet-nginx:${env.GIT_COMMIT}"
                		sh "sudo /usr/bin/docker push nexus-repo.hongsnet.net:5443/hongsnet-nginx:${env.GIT_COMMIT}"
            		}
      		}
 
      		stage('K8s Git Clone') {
            		steps {
				sh "mkdir -p /var/lib/jenkins/workspace/argocd-test"
				dir("/var/lib/jenkins/workspace/argocd-test") {
					git branch: 'master', credentialsId: 'juhanida21', url: 'https://gitlab.hongsnet.net/joohan.hong/argocd_test.git'
					sh "git config --global credential.helper cache"
				}
            		}
      		}

		stage('K8s Deploy') {
			environment {
                                K8S_TAG_CURRENT = sh(script: "cat /var/lib/jenkins/workspace/argocd-test/hongsnet-nginx/values.yaml |grep tag: |awk '{print \$2}'",returnStdout: true).trim()
				GIT_COMMIT = sh(script: 'cd /var/lib/jenkins/workspace/hongsnet_nginx; git rev-parse HEAD | cut -c 1-8',returnStdout: true).trim()
                        }
                        steps {
				//sh "pwd"
				//sh "ls -al "
				//echo "K8S_TAG_CURRENT: ${env.K8S_TAG_CURRENT}"
				//echo "GIT_COMMIT: ${env.GIT_COMMIT}"
				sh "sed -i 's/${env.K8S_TAG_CURRENT}/${env.GIT_COMMIT}/g' /var/lib/jenkins/workspace/argocd-test/hongsnet-nginx/values.yaml"
				sh "cd /var/lib/jenkins/workspace/argocd-test; git add -A; git config --global user.name \"JooHanHong\"; git config --global user.email juhanida21@nate.com; git commit -m '[UPDATE] ${env.GIT_COMMIT}'; git push -u origin master"
				//sh "git add -A"
				//sh "git config --global user.name \"JooHanHong\""
    				//sh "git config --global user.email juhanida21@nate.com"
				//sh "git commit -m '[UPDATE] ${env.GIT_COMMIT}'"
				//sh "git push -u origin master"
			}
		}
   	}
}
